[tool.poetry]
name = "flix-sdk"
version = "2.0.1"
description = "Python SDK and command-line utilities for Flix"
authors = []
homepage = "https://www.foundry.com/products/flix"
repository = "https://github.com/TheFoundryVisionmongers/flix-scripts/tree/master/flixpy"
license = "Apache-2.0"
readme = "README.md"
packages = [{include = "flix"}]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
aiohttp = "^3.8.5"
appdirs = "^1.4.4"
python-dateutil = "^2.8.2"
asyncclick = "^8.1.3.4"
anyio = "^3.7.1"
grpcio = "^1.57.0"
protobuf = "^4.24.1"
cryptography = "^41.0.3"
httpx = "^0.24.1"
attrs = "^23.1.0"
python-socketio = "^5.9.0"
typing-extensions = "^4.9.0"

[tool.poetry.scripts]
flix = 'flix.cli.main:main'

[tool.poetry.group.dev.dependencies]
types-python-dateutil = "^2.8.19.14"
types-appdirs = "^1.4.3.5"
grpcio-tools = "^1.57.0"
grpc-stubs = {git = "https://github.com/shabbyrobe/grpc-stubs.git"}
types-protobuf = "^4.24.0.1"
mypy-protobuf = "^3.5.0"
mypy = "^1.8.0"
openapi-python-client = "^0.15.1"
pyright = "^1.1.350"
ruff = "^0.2.1"
pre-commit = "^3.6.1"


[tool.poetry.group.examples.dependencies]
shotgun-api3 = {git = "https://github.com/shotgunsoftware/python-api.git"}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
python_version = "3.10"
packages = ["flix", "examples"]
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.10"
include = ["flix", "examples", "stubs"]
ignore = ["**/*_pb2*", "**/extension/extension_api/**"]
stubPath = "./stubs"

[tool.ruff]
include = ["pyproject.toml", "flix/**/*.py", "examples/**/*.py", "stubs/**/*.pyi"]
extend-exclude = ["*_pb2*", "flix/extension/extension_api/**"]
target-version = "py310"
line-length = 100

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 50

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # conflict with ruff format
    "ISC001", "COM812",
    # type hinting self/cls is superfluous
    "ANN101", "ANN102",
    # lots of arguments is ok as long as they're keyword arguments
    "PLR0913",
    # very silly rule, why would you want less informative exceptions
    "TRY003",
    # these exception rules are bad
    "EM",
    # relative imports are fine and good actually
    "TID252",
    # removing else would change the semantics if the return was removed
    "RET505", "RET506", "RET507", "RET508",
    # TODO re-enable these ASAP
    "FBT001", "FBT002", "ANN401",
    "D101", "D102", "D103", "D105", "D106", "D107",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
